#!/bin/sh

#!/bin/bash

cat > /root/ingestion-spec.json << \EOF
{
  "type": "index_parallel",
  "spec": {
    "dataSchema": {
      "dataSource": "process-data",
      "timestampSpec": {
        "column": "time",
        "format": "iso"
      },
      "transformSpec": {
        "transforms": [
          {
            "type": "expression",
            "name": "processName",
            "expression": "concat(upper(substring(processName,0,1)),substring(processName,1,strlen(processName)-1))"
          },
          {
            "type": "expression",
            "name": "date",
            "expression": "substring(time,0,10)"
          },
          {
            "type": "expression",
            "name": "milliseconds",
            "expression": "__time % 1000"
          },
          {
            "type": "expression",
            "name": "seconds",
            "expression": "(__time / 1000) % 60"
          }
        ],
        "filter": {
          "type": "regex",
          "dimension": "processName",
          "pattern": ".+er"
        }
      },
      "dimensionsSpec": {
      },
      "granularitySpec": {
        "segmentGranularity": "day",
        "queryGranularity": "second",
        "rollup": false
      }
    },
    "ioConfig": {
      "type": "index_parallel",
      "inputSource": {
        "type": "local",
        "baseDir": "/root/",
        "filter": "raw_data.csv"
      },
      "inputFormat": {
        "type": "csv",
        "findColumnsFromHeader": "true"
      },
      "appendToExisting": false
    },
    "tuningConfig": {
      "type": "index_parallel",
      "maxRowsInMemory": 25000,
      "maxBytesInMemory": 250000,
      "partitionSpec": {
        "type": "dynamic",
        "maxRowsPerSegment": 5000000
      }
    }
  }
}
EOF

cat > /root/compaction-spec.json << EOF
{
    "type": "compact",
    "dataSource": "process-data",
    "ioConfig": {
        "type": "compact",
        "inputSpec": {
            "type": "interval",
            "interval": $(printf "\"%s/%s\"" $(date +"%Y-%m-%d") $(date --date="tomorrow" +"%Y-%m-%d"))
        },
        "dropExisting": true
    },
    "dimensionsSpec": {
        "dimensions": [
        ]
    },
    "tuningConfig": {
        "type": "index_parallel",
        "maxRowsInMemory": 25000,
        "maxBytesInMemory": 250000,
        "partitionSpec": {
            "type": "dynamic",
            "maxRowsPerSegment": 5000000
        }
    },
    "granularitySpec": {
        "segmentGranularity": "day",
        "queryGranularity": "second",
        "rollup": false
    }
}
EOF


cat > /root/query.json << \EOF
{
  "query":"SELECT * FROM \"process-data\" LIMIT 10",
  "resultFormat" : "csv"
}
EOF
